package main_test

import (
	"fmt"
	"os"
	"os/exec"
	"path/filepath"
	"testing"
)

var (
	binName  = "todo"
	fileName = ".test_todos"
)

func TestMain(m *testing.M) {
	build := exec.Command("go", "build", "-o", binName)

	if err := build.Run(); err != nil {
		fmt.Fprintln(os.Stderr, err)
		os.Exit(1)
	}

	result := m.Run()

	fmt.Println("Finished running tests...")

	os.Remove(binName)
	os.Remove(fileName + ".json")
	os.Exit(result)
}

func TestTodo(t *testing.T) {
	task := "Run my tasks"

	dir, err := os.Getwd()

	if err != nil {
		t.Fatal(err)
	}

	cmdPath := filepath.Join(dir, binName)

	t.Run("Add new tasks", func(t *testing.T) {
		cmd := exec.Command(cmdPath, "-name", fileName, "-task", task)
		if err := cmd.Run(); err != nil {
			t.Fatal(err)
		}

		if _, err := os.Stat(fileName + ".json"); os.IsNotExist(err) {
			t.Fatal("Todo file was not created")
		}
	})

	t.Run("List all task", func(t *testing.T) {
		cmd := exec.Command(cmdPath, "-name", fileName, "-list")
		out, err := cmd.CombinedOutput()
		if err != nil {
			t.Fatal(err)
		}
		expected := "1: " + task + " ‚òê" + "\n"

		if string(out) != expected {
			t.Errorf("expected %s, got %s", expected, string(out))
		}

	})

}
